# セキュリティ対策のためのワークフローのひとつ
# 「クレデンシャル」がハードコーディングされている箇所を検知し、ローテーションを促す
# 例として、以下のような「クレデンシャル」を検知します
# - API キー
# - パスワード
# - トークン
# - その他のシークレットなどの機密情報
# リンターとして `secretlint` を使用する
# REPO: https://github.com/secretlint/secretlint

name: Scan Secrets
on:
  # リポジトリに加わるすべての変更およびコードをスキャンする
  pull_request

# ワークフローレベルでパーミッションをすべて無効化
permissions: {}

# デフォルトシェルでパイプエラーを有効化
defaults:
  run:
    shell: bash

# ワークフローが複数起動したら自動キャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  scan:
    # もっとも安価なUbuntuランナーを利用
    runs-on: ubuntu-latest
    # 6時間も待たされないようにタイムアウトを設定（一旦 `5分` で設定）
    timeout-minutes: 5
    # ジョブレベルで必要最小限のパーミッションを定義
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Bashトレーシングオプションの有効化でログを詳細化
      - name: Run secretlint
        run: |
          set -x
          docker run --rm -v "$(pwd):$(pwd)" -w "$(pwd)" \
          secretlint/secretlint secretlint --maskSecrets '**/*'
